how to execute my program:
1. Creat a new mbed project and add "4DGL-uLCD-SE" library to the mbed project just as what lab5 do
2. Put the FFT.py and main.cpp under the dictionary of this mbed project
3. Connect the circuit
  3.1 The black line represented in hw2 picture(https://www.ee.nthu.edu.tw/ee240500/homework-2-digital-analog-io-and-lcd.html) 
      should be connected to the GND pin of mbed and ulcd
  3.2 The red line is connected to 5V pin of mbed and ulcd
  3.3 Other pins of ulcd should be connected with mbed just as what lab5 do
  3.4 The three lines which represent "up, confirm and down" should be connected to A0, A2, a4
  3.5 The dac output of mbed is D7. D7 should be connected to the RC low-pass filter
  3.6 The outcome of RC low-pass filter should be connected back to mbed by pin A5
  3.7 The adc output of mbed is D13. Use picoscope to measure D13
4. Use "up , confirm and down" to select 10Hz, 50Hz or 100Hz. 
5. After select the frequency, please use "picoscope &" to detect the measured wave (Please note that I only genearate wave and collect ADC data
   for about 30 seconds, there will be no output after 30 seconds. After about 40 seconds the pc will begin to genearte FFT output automatically)
6. If you want to do the FFT of wave, please modify the code line 11 (Fs = 1000.0;  # sampling rate, 1000.0 for 10Hz, 5000.0 for 50Hz, 10000.0 for 100Hz) 
   and execute "$ sudo python3 FFT.py"
   modification: 10Hz => Fs=1000.0;  50Hz => Fs=5000.0;  100Hz => Fs=10000.0;
   (Please note that you need to complete the modification within 40 seconds after you push the "confirm" button on circuit board, so I advise you to
   do the modification based on your approved frequency before you push the button)
7. The FFT analysis may consume several minutes, sometimes there will be error information immediately like (error on line 22：convert string to float）
   Then please use "$ sudo python3 FFT.py" to try again.

Results： After low_pass filter, the peaks and the bottom sharp angles are becoming smooth because I use a Rc filter (cut-off frequency ~ 100Hz) to block
          the frequency components which are higher than 100Hz.
          By doing the FFT analysis, I can see that the most significant component is near the 0Hz(dc value) bacause this triangle wave has a dc offset about 0.5,
          If the selected frequency is fc, the second significant frequency is fc. There will also be frequencies around 2fs, 3fs ...... The amplitude are becoming 
          lower as mutiple-frequency components becoming higher.
